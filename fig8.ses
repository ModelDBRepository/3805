load_file("nrngui.hoc")
objectvar save_window_, rvp_
objectvar scene_vector_[7]
objectvar ocbox_, ocbox_list_, scene_, scene_list_
{ocbox_list_ = new List()  scene_list_ = new List()}
{pwman_place(0,0,0)}

//Begin PointProcessManager
{
load_file("pointman.hoc")
}
{
extra ocbox_ = new PointProcessManager(0)
}
{object_push(ocbox_)}
{
mt.select("IClamp") i = mt.selected()
ms[i] = new MechanismStandard("IClamp")
ms[i].set("del", 0, 0)
ms[i].set("dur", 0.1, 0)
ms[i].set("amp", 20, 0)
mt.select("IClamp") i = mt.selected() maction(i)
hoc_ac_ = 1
sec.sec move() d1.flip_to(0)
}
{object_pop() doNotify()}
{
ocbox_ = ocbox_.v1
ocbox_.map("PointProcessManager", 75, 536, 208.32, 326.4)
}
objref ocbox_
//End PointProcessManager

{
save_window_ = new Graph(0)
save_window_.size(0,4,0,100)
scene_vector_[3] = save_window_
{save_window_.view(0, 0, 4, 100, 387, 49, 341.76, 232)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.addexpr("soma.v(.42)", 1, 1, 0.8, 0.9, 2)
save_window_.addexpr("is.v(.5)", 3, 1, 0.8, 0.9, 2)
save_window_.addexpr("myelin.v(.5)", 1, 1, 0.8, 0.9, 2)
save_window_.addexpr("node.v(.5)", 2, 1, 0.8, 0.9, 2)
save_window_.addexpr("dend.v(.083)", 1, 1, 0.8, 0.9, 2)
}
{
xpanel("RunControl", 0)
v_init = 0
xvalue("Init","v_init", 1,"stdinit()", 1, 1 )
xbutton("Init & Run","run()")
xbutton("Stop","stoprun=1")
runStopAt = 5
xvalue("Continue til","runStopAt", 1,"{continuerun(runStopAt) stoprun=1}", 1, 1 )
runStopIn = 1
xvalue("Continue for","runStopIn", 1,"{continuerun(t + runStopIn) stoprun=1}", 1, 1 )
xbutton("Single Step","steprun()")
t = 4
xvalue("t","t", 2 )
tstop = 4
xvalue("Tstop","tstop", 1,"tstop_changed()", 0, 1 )
dt = 0.025
xvalue("dt","dt", 1,"setdt()", 0, 1 )
steps_per_ms = 40
xvalue("Points plotted/ms","steps_per_ms", 1,"setdt()", 0, 1 )
xcheckbox("Quiet",&stdrun_quiet,"")
realtime = 5
xvalue("Real Time","realtime", 0,"", 0, 1 )
xpanel(78,137)
}
{
save_window_ = new Graph(0)
save_window_.size(-1525,4800,0,100)
scene_vector_[4] = save_window_
{save_window_.view(-1525, 0, 6325, 100, 766, 54, 300.48, 200.32)}
flush_list.append(save_window_)
save_window_.save_name("flush_list.")
objectvar rvp_
rvp_ = new RangeVarPlot("v")
extra rvp_.begin(1)
dend rvp_.end(1)
rvp_.origin(0)
save_window_.addobject(rvp_, 2, 1, 0.8, 0.9)
}
{
save_window_ = new Graph(0)
save_window_.size(-0.1,4,-5.1,1.1)
scene_vector_[5] = save_window_
{save_window_.view(-0.1, -5.1, 4.1, 6.2, 390, 352, 335.04, 136.96)}
graphList[1].append(save_window_)
save_window_.save_name("graphList[1].")
save_window_.addexpr("soma.i_membrane( 0.42 )", 1, 1, 0.8, 0.9, 2)
save_window_.addexpr("is.i_membrane( 0.5 )", 3, 1, 0.8, 0.9, 2)
save_window_.addvar("node[0].i_membrane( 0.5 )", 2, 1, 0.8, 0.9, 2)
}
{
save_window_ = new Graph(0)
save_window_.size(-500,1000,-5,1)
scene_vector_[6] = save_window_
{save_window_.view(-500, -5, 1500, 6, 769, 328, 300.48, 200.32)}
flush_list.append(save_window_)
save_window_.save_name("flush_list.")
objectvar rvp_
rvp_ = new RangeVarPlot("i_membrane")
extra rvp_.begin(1)
dend rvp_.end(1)
rvp_.origin(0)
save_window_.addobject(rvp_, 2, 1, 0.8, 0.9)
}
objectvar scene_vector_[1]
{doNotify()}
